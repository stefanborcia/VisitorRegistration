// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisitorDataAccess;

#nullable disable

namespace VisitorDataAccess.Migrations
{
    [DbContext(typeof(VisitorDbContext))]
    [Migration("20241107134944_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VisitorDataAccess.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "On Core"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Integration Team"
                        });
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyId = 1L,
                            Name = "Angelo Dejaeghere"
                        },
                        new
                        {
                            Id = 2L,
                            CompanyId = 1L,
                            Name = "Niels Stubbe"
                        },
                        new
                        {
                            Id = 3L,
                            CompanyId = 1L,
                            Name = "Mathias Schaemelhout"
                        },
                        new
                        {
                            Id = 4L,
                            CompanyId = 2L,
                            Name = "Nathan Moerman"
                        },
                        new
                        {
                            Id = 5L,
                            CompanyId = 2L,
                            Name = "Robert Maes"
                        },
                        new
                        {
                            Id = 6L,
                            CompanyId = 2L,
                            Name = "Nils Van Butsel"
                        });
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Visit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AppointmentWithId")
                        .HasColumnType("bigint");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("VisitingCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long>("VisitorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentWithId");

                    b.HasIndex("VisitingCompanyId");

                    b.HasIndex("VisitorId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Visitor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.VisitorLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Actions")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeSpent")
                        .HasColumnType("datetime2");

                    b.Property<long>("VisitId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitorLogs");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Employee", b =>
                {
                    b.HasOne("VisitorDataAccess.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Visit", b =>
                {
                    b.HasOne("VisitorDataAccess.Entities.Employee", "AppointmentWith")
                        .WithMany()
                        .HasForeignKey("AppointmentWithId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VisitorDataAccess.Entities.Company", "VisitingCompany")
                        .WithMany()
                        .HasForeignKey("VisitingCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VisitorDataAccess.Entities.Visitor", "Visitor")
                        .WithMany("Visits")
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppointmentWith");

                    b.Navigation("VisitingCompany");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.VisitorLog", b =>
                {
                    b.HasOne("VisitorDataAccess.Entities.Visit", "Visit")
                        .WithMany()
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Company", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("VisitorDataAccess.Entities.Visitor", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
